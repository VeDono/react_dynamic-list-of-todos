{"version":3,"sources":["enum/SelectorOption.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers.ts","index.tsx"],"names":["SelectorOption","TodoList","todos","setTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setCurrentSelector","setSearchQuery","searchQuery","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","useState","isLoading","setIsLoading","findedUser","setFindedUser","useEffect","userId","catch","alert","finally","href","email","name","App","setTodos","setSelectedTodo","currentSelector","filteredTodos","selector","preparedSearchQuery","toLowerCase","trim","todosFilteredBySelector","filter","includes","getFilteredTodos","recivedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9074d9d4.chunk.js","sourcesContent":["export enum SelectorOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype TodoListType = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<TodoListType> = ({\n  todos,\n  setTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': todo.id !== selectedTodo?.id,\n                    'fa-eye-slash': todo.id === selectedTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { SelectorOption } from '../../enum';\n\ntype Props = {\n  setCurrentSelector: (value: string) => void;\n  setSearchQuery: (value: string) => void;\n  searchQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setCurrentSelector,\n  setSearchQuery,\n  searchQuery,\n}) => {\n  const handlerSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentSelector(event.target.value);\n  };\n\n  const handlerSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchQuery(value);\n  };\n\n  const handlerClearSearch = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handlerSelector}\n          >\n            <option value={SelectorOption.All}>All</option>\n            <option value={SelectorOption.Active}>Active</option>\n            <option value={SelectorOption.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handlerSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handlerClearSearch}\n              aria-label=\"cleanSearchQuery\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [findedUser, setFindedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then(setFindedUser)\n      .catch(() => (\n        // eslint-disable-next-line no-alert\n        alert('Error during user reciving 😥')\n      ))\n      .finally(() => setIsLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n              aria-label=\"delete\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {\n                  todo.completed\n                    ? 'Done'\n                    : 'Planned'\n                }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${findedUser?.email}`}>\n                {findedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { getFilteredTodos } from './helpers';\nimport { SelectorOption } from './enum';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [currentSelector, setCurrentSelector] = useState<string>(SelectorOption.All);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredTodos = getFilteredTodos(todos, currentSelector, searchQuery) || null;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      // eslint-disable-next-line no-alert\n      .catch(() => alert('Error during todos reciving 😥'))\n      .finally(() => {\n        setIsLoading(false);\n\n        return new Promise(resolve => setTimeout(resolve, 2000));\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setCurrentSelector={setCurrentSelector}\n                setSearchQuery={setSearchQuery}\n                searchQuery={searchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filteredTodos}\n                      selectedTodo={selectedTodo}\n                      setTodo={(recivedTodo) => (\n                        setSelectedTodo(recivedTodo)\n                      )}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeModal={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import { SelectorOption } from './enum';\nimport { Todo } from './types/Todo';\n\nexport function getFilteredTodos(\n  todos: Todo[],\n  selector?: string,\n  searchQuery?: string,\n) {\n  const preparedSearchQuery = searchQuery?.toLowerCase().trim();\n\n  const todosFilteredBySelector = todos.filter(todo => {\n    switch (selector) {\n      case SelectorOption.Completed:\n        return todo.completed;\n\n      case SelectorOption.Active:\n        return !todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  if (preparedSearchQuery && todosFilteredBySelector) {\n    return todosFilteredBySelector.filter(todo => (\n      todo.title.toLowerCase().includes(preparedSearchQuery)\n    ));\n  }\n\n  return todosFilteredBySelector;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}